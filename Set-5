// 5a. First Fit Memory Allocation
void first_fit() {
    int bsize[10], psize[10], allocation[10], m, n, i, j;
    printf("Enter number of blocks and processes: ");
    scanf("%d%d", &m, &n);
    
    printf("Enter block sizes: ");
    for(i = 0; i < m; i++) scanf("%d", &bsize[i]);
    
    printf("Enter process sizes: ");
    for(i = 0; i < n; i++) {
        scanf("%d", &psize[i]);
        allocation[i] = -1;
    }
    
    for(i = 0; i < n; i++) {
        for(j = 0; j < m; j++) {
            if(bsize[j] >= psize[i]) {
                allocation[i] = j;
                bsize[j] -= psize[i];
                break;
            }
        }
    }
    
    printf("Process\tSize\tBlock\n");
    for(i = 0; i < n; i++) {
        printf("%d\t%d\t", i+1, psize[i]);
        if(allocation[i] != -1) printf("%d\n", allocation[i]+1);
        else printf("Not Allocated\n");
    }
}








// 5b. FCFS Page Replacement
void fcfs_page() {
    int n, frames, pages[50], frame[10], i, j, k, avail, count = 0;
    printf("Enter number of pages and frames: ");
    scanf("%d%d", &n, &frames);
    
    printf("Enter page sequence: ");
    for(i = 0; i < n; i++) scanf("%d", &pages[i]);
    
    for(i = 0; i < frames; i++) frame[i] = -1;
    
    j = 0;
    printf("Page\tFrames\n");
    for(i = 0; i < n; i++) {
        avail = 0;
        for(k = 0; k < frames; k++)
            if(frame[k] == pages[i]) avail = 1;
        
        if(avail == 0) {
            frame[j] = pages[i];
            j = (j + 1) % frames;
            count++;
        }
        
        printf("%d\t", pages[i]);
        for(k = 0; k < frames; k++) printf("%d ", frame[k]);
        printf("\n");
    }
    printf("Page faults: %d\n", count);
}
